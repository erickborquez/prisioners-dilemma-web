import { Box, Button, Flex, Input, Spinner, Text } from "@chakra-ui/react";
import Head from "next/head";
import { useEffect, useState } from "react"

import { ActorPlayer, ActorStrategyType, ActorType } from "@/actor/type"
import { SoloStrategyGameComponent } from "@/game/component/SoloStrategyGame";
import { SoloStrategyGame } from "@/game/SoloStrategyGame";
import { useObservable } from "@/util/hook/useObservable";
import { delay } from "@/util/async";
import { useAsyncStatus } from "@/util/hook/useAsyncStatus";
import { getRandomName } from "@/util/name";
import { Game } from "@/game/component/Game.tsx";

// ********************************************************************************
// TODO: use non-hardcoded data
const actorPlayer: ActorPlayer = {
  id: 'player',
  type: ActorType.Player,

  name: 'TÃº',
};

const gameSpecs = [
  ActorStrategyType.Gladstein,
  ActorStrategyType.Grofman,
  ActorStrategyType.Hufford,
  ActorStrategyType.SecondByBlack,
  ActorStrategyType.TitForTat,
].map((strategy, index) => ({
  actors: [actorPlayer, {
    id: 'strategy',
    type: ActorType.Strategy,

    name: getRandomName(),
    strategy,
  }],

  maxRounds: 40,

  splitSplitPoints: 3,
  splitTakePoints: 0,
  takeSplitPoints: 5,
  takeTakePoints: 1,
}));

// ********************************************************************************
export default function Home() {
  const [isSelectingName, setIsSelectingName] = useState(true);
  const [name, setName] = useState('');

  const handleNameChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setName(event.target.value);
  }
  return (
    <>
      <Head>
        <title>Dilema del Prisionero</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Box width='100%' maxWidth='500px' margin='auto' padding='20vh 24px 0 24px' >
          {isSelectingName ? (
            <Flex direction='column' alignItems='center' gap='16px'>
              <Text fontSize='24px' color='#444' fontWeight='600'>Escribe tu nombre</Text>
              <Input value={name} onChange={handleNameChange} />
              <Button onClick={() => setIsSelectingName(false)}>Continuar</Button>
            </Flex>
          ) : (
            <Game name={name} />
          )}
        </Box>
      </main>
    </>
  );
}
